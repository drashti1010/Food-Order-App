{"ast":null,"code":"var _jsxFileName = \"/Users/drashti/Documents/Food App/src/store/cart-provider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport CardContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  item: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.item.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.item[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.item];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.item.concat(action.item);\n    }\n    return {\n      item: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.item.findIndex(item => item.id === action.item.id);\n    const existingItem = state.item[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      const updatedItem = {\n        ...(existingItem - action.item.id)\n      };\n      updatedItems = [...state.item];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = action.item.amount - 1;\n    }\n    return {\n      item: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartState] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartState({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemToCartHandler = id => {\n    dispatchCartState({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const cartContext = {\n    item: cartState.item,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CardContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"A321fGrGOvATAKC1pl29YNNungo=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CardContext","jsxDEV","_jsxDEV","defaultCartState","item","totalAmount","cartReducer","state","action","type","updatedTotalAmount","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","CartProvider","props","_s","cartState","dispatchCartState","addItemToCartHandler","removeItemToCartHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/drashti/Documents/Food App/src/store/cart-provider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport CardContext from \"./cart-context\";\n\nconst defaultCartState = { item: [], totalAmount: 0 };\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    const existingCartItemIndex = state.item.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingCartItem = state.item[existingCartItemIndex];\n\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.item];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.item.concat(action.item);\n    }\n\n    return { item: updatedItems, totalAmount: updatedTotalAmount };\n  }\n  if (action.type === \"REMOVE\") {\n    \n    const existingCartItemIndex = state.item.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingItem=state.item[existingCartItemIndex];\n\n    const updatedTotalAmount =\n      state.totalAmount - existingItem.price;\n\n    let updatedItems;\n\n    if(existingItem.amount===1){\n      const updatedItem={\n        ...existingItem-action.item.id\n      }\n      updatedItems = [...state.item];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n    else{\n      updatedItems=action.item.amount-1\n    }\n    return { item: updatedItems, totalAmount: updatedTotalAmount };\n  }\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartState] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartState({ type: \"ADD\", item: item });\n  };\n  const removeItemToCartHandler = (id) => {\n    dispatchCartState({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    item: cartState.item,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler,\n  };\n  return (\n    <CardContext.Provider value={cartContext}>\n      {props.children}\n    </CardContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}